tqlanalyze.description=The above command displays the execution plan of the specified TQL command.
tqlanalyze.parameter=<Container name> <Query>;
tqlanalyze.detail=\n\
Argument:\n\
\ <Container name> Specify the target container. \n\
\ <Query>;         Specify the TQL command to get the execution plan. \n\
\                  A semicolon (;) is required at the end of a TQL command.

tqlclose.description=Discard the search results retained.

queryclose.description=Close SQL.

connect.description=Connect to a GridDB cluster.If the SQL connection destination is specified (execution of setclustersql sub-command), SQL connection is also carried out.
connect.parameter=<Cluster variable> [<Database name>]
connect.detail=\n\
Argument:\n\
\ <Cluster variable> Specify a GridDB cluster serving as the connection \n\
\                    destination by its cluster variable. \n\
\ <Database name>    Specify the database name. \n\
\                    Connect to the public database if the database \n\
\                    name is omitted. \n\
\                    

createindex.description=Create an index in the specified column.
createindex.parameter=<Container name> <Column name> <Index type>...
createindex.detail=\n\
Argument:\n\
\ <Container name> Specify the name of container that the column subject \n\
\                  to the index operation belongs to. \n\
\ <Column name>    Specify the name of the column subject to the index operation.\n\
\ <Index type>...  Specify the index type. Specify TREE, HASH or SPATIAL \n\
\                  (or multiple) for the index type.

disconnect.description=The above command disconnect user from a GridDB cluster.

dropindex.description=Delete an index of the specified column.
dropindex.parameter=<Container name> <Column name> <Index type>...
dropindex.detail=\n\
Argument:\n\
\ <Container name> Specify the name of container that the column subject \n\
\                  to the index operation belongs to. \n\
\ <Column name>    Specify the name of the column subject to the index operation.\n\
\ <Index type>...  Specify the index type. Specify TREE, HASH or SPATIAL \n\
\                  (or multiple) for the index type.

tqlexplain.description=Execute the specified TQL command and display the execution plan and actual measurement values such as the number of cases processed etc.
tqlexplain.parameter=<Container name> <Query>;
tqlexplain.detail=\n\
Argument:\n\
\ <Container name> Specify the target container. \n\
\ <Query>;         Specify the TQL command to get the execution plan. \n\
\                  A semicolon (;) is required at the end of a TQL command.

get.description=Get the search results and display them in a stdout.
get.parameter=[<No. of cases acquired>]
get.detail=\n\
Argument:\n\
\ <No. of cases acquired> Specify the number of search results to be acquired.\n\
\                         All search results will be obtained and saved \n\
\                         in the file by default. 

getcsv.description=Get the search results and save them in a file in the CSV format.
getcsv.parameter=<CSV file name> [<No. of search results found>]
getcsv.detail=\n\
Argument:\n\
\ <CSV file name>               Specify the name of the file where the search \n\
\                               results are saved. \n\
\ <No. of search results found> Specify the number of search results to be \n\
\                               acquired. All search results will be obtained \n\
\                               by default. 

getnoprint.description=Get the query results but do not display them in a stdout.
getnoprint.parameter=[<No. of cases acquired>]
getnoprint.detail=\n\
Argument:\n\
\ <No. of cases acquired> Specify the number of search results to be acquired.\n\
\                         All search results will be obtained and saved \n\
\                         in the file by default.

tql.description=The above command will execute a search and retain the search results.
tql.parameter=<Container name> <Query>;
tql.detail=\n\
Argument:\n\
\ <Container name> Specify the container subject to the search. \n\
\ <Query>;         Specify the TQL command to execute. \n\
\                  A semicolon (;) is required at the end of a TQL command.

sql.description=The above command executes an SQL command and retains the search result.
sql.parameter=<SQL command>;
sql.detail=\n\
Argument:\n\
\ <SQL command>; Specify the SQL command to execute. \n\
\                A semicolon (;) is required at the end of the SQL command.

createdatabase.description=Create a database.
createdatabase.parameter=<Database name>
createdatabase.detail=\n\
Argument:\n\
\ <Database name> Specify the name of the database to be created. 

dropdatabase.description=Delete a database.
dropdatabase.parameter=<Database name>
dropdatabase.detail=\n\
Argument:\n\
\ <Database name> Specify the name of the database to be deleted.

showdatabase.description=The above command is used to display the database list and access permissions data.
showdatabase.parameter=[<Database name>]
showdatabase.detail=\n\
Argument:\n\
\ <Database name> Specify the name of the database to be displayed. 

createuser.description=Create a general user.
createuser.parameter=<User name> <Password>
createuser.detail=\n\
Argument:\n\
\ <User name>  Specify the name of the user to be created. \n\
\ <Password>   Specify the password of the user to be created.

dropuser.description=Delete a general user.
dropuser.parameter=<User name>
dropuser.detail=\n\
Argument:\n\
\ <User name>  Specify the name of the user to be deleted.

showuser.description=The above command displays the user or role data.
showuser.parameter=[<User Name>|<Role Name>]
showuser.detail=\n\
Argument:\n\
\ <User Name>|<Role Name>  Specify the name of the user or role to be displayed. 

setpassword.description=Change the password of a general user.
setpassword.parameter=<Password> | <User name> <Password>
setpassword.detail=\n\
Argument:\n\
\ <User name> Specify the name of the user to change the password.\n\
\ <Password>  Specify the password to change.

grantacl.description=The above command is used to assign access permissions to the database.
grantacl.parameter=<Privilege> <Database name> <User name>
grantacl.detail=\n\
Argument:\n\
\ <Privilege>     Specify the name of the privilege.(ALL or READ)\n\
\ <Database name> Specify the name of the database.\n\
\ <User name>     Specify the name of the user to assign access permissions to.

revokeacl.description=The above command is used to revoke access permissions to the database.
revokeacl.parameter=<Privilege> <Database name> <User name>
revokeacl.detail=\n\
Argument:\n\
\ <Privilege>      Specify the name of the privilege.(ALL or READ)\n\
\ <Database name>  Specify the name of the database.\n\
\ <User name>      Specify the name of the user to revoke access permissions.

createcontainer.description=Create a container from the container data file.
createcontainer.parameter=<Container data file> [<Container name>]
createcontainer.detail=\n\
Argument:\n\
\ <Container data file> Specify the file storing the container data \n\
\                       in JSON format.\n\
\ <Container name>      Specify the name of the container to be created.\n\
\                       If the name is omitted in the createcontainer command,\n\
\                       a container with the name given in the container data \n\ 
\                       file will be created.

createcollection.description=Create a container (collection).
createcollection.parameter=<Container name> <Column name> <Column type> [<Column name> <Column type>...]
createcollection.detail=\n\
Argument:\n\
\ <Container name> Specify the name of the container to be created.\n\
\ <Column name>    Specify the column name.\n\
\ <Column type>    Specify the column type.

createtimeseries.description=Create a container (time series container).
createtimeseries.parameter=<Container name> <Compression method> <Column name> <Column type> [<Column name> <Column type>...]
createtimeseries.detail=\n\
Argument:\n\
\ <Container name>     Specify the name of the container to be created.\n\
\ <Compression method> For time series data, specify the data compression method.\n\
\ <Column name>        Specify the column name.\n\
\ <Column type>        Specify the column type.

dropcontainer.description=The above command is used to delete a container.
dropcontainer.parameter=<Container name>
dropcontainer.detail=\n\
Argument:\n\
\ <Container name> Specify the name of the container to be deleted. 

showcontainer.description=The above command is used to display the container data.
showcontainer.parameter=[<Container name>]
showcontainer.detail=\n\
Argument:\n\
\ <Container name> Specify the container name to be displayed.\n\
\                  Display a list of all containers if omitted. 

showtable.description=The above command is used to display the table data.
showtable.parameter=[<Table name>]
showtable.detail=\n\
Argument:\n\
\ <Table name> Specify the table name to be displayed. \n\
\              Display a list of all tables if omitted.

droptrigger.description=Delete the trigger data.
droptrigger.parameter=<Container name> <Trigger name>
droptrigger.detail=\n\
Argument:\n\
\ <Container name> Specify the name of the container containing trigger\n\
\                  to be deleted.\n\
\ <Trigger name>   Specify the trigger name to delete.

showtrigger.description=Display the trigger data.
showtrigger.parameter=<Container name> [<Trigger name>]
showtrigger.detail=\n\
Argument:\n\
\ <Container name> Specify the container name.\n\
\ <Trigger name>   Specify the trigger name to be displayed. \n\
\                  Display a list of all trigger data if omitted.

showsql.description=Display currently executing sql information.
showsql.parameter=[<query id>]
showsql.detail=\n\
Argument:\n\
\ <query id>    Specify the id of the display.\n\
\               Display a list of all queries if omitted. 

showevent.description=Display Currently executing event information.

showconnection.description=Display Currently executing connection information.

killsql.description=Cancel SQL query. 
killsql.parameter=<query id>
killsql.detail=\n\
Argument:\n\
\ <query id>    Specify the id to cancel.

killjob.description=Cancel job.
killjob.parameter=<JOBID>
killjob.detail=\n\
Argument:\n\
\ <JOBID>       Specify the id to cancel.

getplantxt.description=Get the execution plan in plain text.
getplantxt.parameter=[<file name>]
getplantxt.detail=\n\
Argument:\n\
\ <file name>   Specify the name of the file where \n\
\               the execution plan is saved.

gettaskplan.description=Get the details of execution plan with specified id in JSON format.
gettaskplan.parameter=<id>
gettaskplan.detail=\n\
Argument:\n\
\ <id>          Specify the id to display.

getplanjson.description=Get the all details of execution plan in JSON format.
getplanjson.parameter=[<JSON file name>]
getplanjson.detail=\n\
Argument:\n\
\ <JSON file name> Specify the name of the file where \n\
\                  the execution plan is saved.

createcompindex.description=Create an index in the specified column.
createcompindex.parameter=<Container name> <Column name>...
createcompindex.detail=\n\
Argument:\n\
\ <Container name> Specify the name of container that the column subject \n\
\                  to the index operation belongs to. \n\
\ <Column name>... Specify the name of the column subject to the index operation.\n\
\                  Column name must have multiple values.

dropcompindex.description=Delete an index of the specified column.
dropcompindex.parameter=<Container name> <Column name>...
dropcompindex.detail=\n\
Argument:\n\
\ <Container name> Specify the name of container that the column subject \n\
\                  to the index operation belongs to. \n\
\ <Column name>    Specify the name of the column subject to the index operation.\n\
\                  Column name must have multiple values.

settimezone.description=Define an arbitrary variable.
settimezone.parameter=[<Time Zone>]
settimezone.detail=\n\
Argument:\n\
\ <Time Zone>     Specify the time zone value.\n\
\                 can be cleared by omitting the specification.

putrow.description=Put a row to specified container.
putrow.parameter=<Container name> <Value> [<Value> ...]
putrow.detail=\n\
Argument:\n\
\ <Container name>   Specify the container name to add row.\n\
\ <Value(s)>         Value(s) of column that constructs a row.         

removerow.description=Remove a row from specified container by specifying a row key.
removerow.parameter=<Container name> <Value> [<Value> ...]
removerow.detail=\n\
Argument:\n\
\ <Container name>   Specify the container name to remove row.\n\
\ <Value(s)>         Value(s) of the key of the row to be removed

searchcontainer.description=Search containers using name pattern.
searchcontainer.parameter=[<Name pattern>]
searchcontainer.detail=\n\
Argument:\n\
\ <Name pattern>   The pattern of the container name.\n\
\                  If name pattern has no wildcard, the result will match exactly\n\
\                  The wildcard "%" specified in the pattern means to match 0 or more characters, and "_" means to\n\
\                  match any one character.\n\
\                  When null is specified, all containers are listed.

searchview.description=Search views using name pattern.
searchview.parameter=[<Name pattern>]
searchview.detail=\n\
Argument:\n\
\ <Name pattern>   The pattern of the view name.\n\
\                  If name pattern has no wildcard, the result will match exactly.\n\
\                  The wildcard "%" specified in the pattern means to match 0 or more characters, and "_" means to\n\
\                  match any one character.\n\
\                  When null is specified, all views are listed.

setauthmethod.description=Set authentication method variable.
setauthmethod.parameter=[<Authentication Method>]
setauthmethod.detail=\n\
Argument:\n\
\ <Authentication Method>  Specify type of authentication method.\n\
\                          The values of "authentication" variable are "LDAP" or "INTERNAL".\n\
\                          When not specified, the value of "authentication" variable is cleared.

setntfif.description=Set notification interface address variable.
setntfif.parameter=[<Notification Interface Address>]
setntfif.detail=\n\
Argument:\n\
\ <Notification Interface Address> Specify Notification Interface Address.\n\
\                                  When not specified, the value of "notificationInterfaceAddress" variable is cleared.

message.connected=The connection attempt was successful(NoSQL).
message.connectedSQL=The connection attempt was successful(NewSQL).
message.notConnected=The connection was disabled.
message.disconnected=Disconnected connection attempt was successful.
message.hitCount={0} results. ({1} ms)
message.selectOnly=The query had been executed. ({0} ms)
message.getCount=The {0} results had been acquired.
message.gotCountProgress=The {0} results had been acquired.
message.insertcount=The {0} records had been inserted.
message.deletecount=The {0} records had been deleted.
message.updatecount=The {0} records had been updated.

error.userPasswordNull=D20301: The username and password is not set.
error.notConnected=D20302: This connection has already been closed(NoSQL).
error.connected=D20303: This connection has already been established.
error.notQueried=D20304: This query has not been executed yet.
error.containerNotFound=D20305: The Container {0}  does not exist.
error.cannotSave=D20306: {0} can not be saved. 
error.connect=D20307: An unexpected error occurred while attempting to connect.
error.tql=D20308: An unexpected error occurred while attempting to connect.
error.tqlanalyze=D20309: An unexpected error occurred while executing a query (analyze).
error.tqlexplain=D20310: An unexpected error occurred while executing a query (explain).
error.get=D20311: An unexpected error occurred while getting results.
error.getrow=D20312: An unexpected error occurred while getting results.
error.getnoprint=D20313: An unexpected error occurred while getting results.
error.createindex=D20314: An unexpected error occurred while creating indexes.
error.dropindex=D20315: An unexpected error occurred while dropping indexes.
error.showcontainer=D20316: An unexpected error occurred while providing container information.
error.showcontainerDetail=D20317: An unexpected error occurred while providing container information details.
error.showtrigger=D20318: An unexpected error occurred while providing trigger information.
error.triggerNotFound=D20319: This trigger does not exist.
error.dropcontainer=D20320: An unexpected error occurred while dropping containers.
error.droptrigger=D20321: An unexpected error occurred while dropping triggers.
error.createcompindex=D20381: An unexpected error occurred while creating indexes.
error.dropcompindex=D20382: An unexpected error occurred while dropping indexes.

error.containerAlreadyExists=D20322: This Container "{0}" already exists.
error.createcontainer=D20323: An unexpected error occurred while creating containers.
error.createcontainer2=D20324: An unexpected error occurred while creating containers.
error.createIndexInCreateContainer=D20325: An unexpected error occurred while creating indexes.
error.createTriggerInCreateContainer=D20326: An unexpected error occurred while creating triggers.
error.createcollection=D20327: An unexpected error occurred while creating containers(Collection).
error.createtimeseries=D20328: An unexpected error occurred while creating containers(TimeSeries).
error.createTimeseriesCompMethod=D20329:To set the compression mode to HI, use createcontainer command.
error.columnInvalid=D20330: The column name and type is incorrect.
error.sqlIsNull=D20331: SQL is not set.
error.sql=D20332: An unexpected error occurred while executing a SQL.
error.notConnectedSQL=D20333:This connection has already been closed(NewSQL).
error.newsqlnotfounr=D20334: The APIs for NewSQL does not exists. Install the package for NewSQL.

error.createDb=D20335: An unexpected error occurred while creating the database.
error.dropDb=D20336: An unexpected error occurred while dropping the database.
error.showDb=D20337: An unexpected error occurred while providing database information.
error.getCurrentDb=D20338: An unexpected error occurred while providing current database information.
error.createUser=D20339: An unexpected error occurred while creating the user.
error.dropUser=D2033A: An unexpected error occurred while dropping the user.
error.setPassword=D2033B: An unexpected error occurred while changing the password.
error.showUser=D2033C: An unexpected error occurred while providing user information.
error.grant=D2033D: An unexpected error occurred while granting permission.
error.revoke=D2033E: An unexpected error occurred while revoking permission.
error.checkDb=D2033F: An unexpected error occurred while checking if database exists.

error.dbNotFound=D20340: This database "{0}" does not exists.
error.userNotFound=D20341: This user "{0}" does not exists.
error.containerNotFound=D20342: This container "{0}" does not exists.
error.tableNotFound=D20343: This table "{0}" does not exists.
error.triggerNotFound=D20344: This trigger "{0}" does not exists.
error.dbAlreadyExists=D20345: This database "{0}" already exists.
error.userAlreadyExists=D20346: This user "{0}" already exists.
error.privilegeAlreadyExists=D20347: This database "{0}" already has been granted permission.
error.privilegeNotFound=D20348: This permission is not granted.

error.notNoSQLContainer=D20349: This container "{0}" does not exists.
error.showtableNotExists=D2034A: This table "{0}" does not exists.
error.noResultSet=D2034B: This query has not been executed yet.
error.columnTypeInvalid=D2034C: The Column type is incorrect.
error.compositeMethodInvalid=D2034D: The Compression mode is incorrect.
error.notSuperUser=D2034E: Only administrator users are allowed to execute this command.
error.createContNewSQL=D2034F: To create NewSQL tables, use sql command.
error.dropDb2=D20350: The database can not be dropped because users are still connected to it.
error.checkSuperUser=D20351: An unexpected error occurred while checking user information.
error.privSuperUser=D20352: This user "{0}" is Administrator user. Administrator privileges cannot manage.
error.privilegeAlreadyExists2=D20353: This database "{0}" has already been assigned to another user."
error.setPasswordAdmin=D20354: To change the administrator "{0}" password, execute gs_passwd operating command.
error.setPasswordNormalUser=D20355: General user can change only own password.
error.showContainerInPartition=D20356: An unexpected error occurred while getting list of container in partitions. 
error.notAllowedOnPartitioned=D20357: This operation on the partitioned container is not allowed.
error.notSingleIsNotSupported=D20358: This container can not be created.
error.notAllowedOnView=D20378: This operation on the view is not allowed.

error.showsql=D20359: An unexpected error occurred while providing currently executing sql information.
error.showsqlSqlInfoNotFound=D20360: Currently executing sql not found.
error.showsqlSqlInfoQueryIdNotFound=D20361: This query "{0}" does not exists.

error.showevent=D20362: An unexpected error occurred while providing currently executing event information.
error.showeventEventNotFound=D20363: Currently executing event not found.

error.showconnection=D20364: An unexpected error occurred while providing currently executing connection information.
error.showconnectionConnectionNotFound=D20365: Currently executing connection not found.

error.killsql=D20366: An unexpected error occurred while cancelling SQL.
error.killsqlSqlInfoQueryIdNotFound=D20367: This query "{0}" does not exists.

error.getplantxt=D20368: An unexpected error occurred while providing explain information.
error.getplantxtNotExplain=D20369: Do not execute EXPLAIN.
error.getplantxtFileErr=D20370: An unexpected error occurred while file output.

error.gettaskplan=D20371: An unexpected error occurred while providing explain information.
error.gettaskplanNotFound=D20372: This task "{0}" does not exists.

error.gettaskplan=D20373: An unexpected error occurred while providing explain information.

error.getplanjson=D20374: An unexpected error occurred while providing explain information.
error.getplanjsonFileErr=D20375: An unexpected error occurred while file output.

error.killjob=D20376: An unexpected error occurred while cancelling job.
error.killjobSqlInfoQueryIdNotFound=D20377: This job "{0}" does not exists.

error.timezoneInvalid=D20379: "{0}" is invalid timezone.

error.columnNamesMultiple=D20380:Column name must have multiple values.

error.puttingRow=D20428: An unexpected error occurred while putting row.
error.puttingRowInvalidColumnValue=D20426: The column value is incorrect.
error.puttingRowRedundantColumn=D20432: The number of specified column values is larger than that of the container.
error.puttingRowSpecifiedBlobValue=D20433: The BLOB type column value is not NULL (it must be NULL).
error.puttingRowColumnTypeNotSupport=D20434: The column type is not supported: "{0}". 
error.putRowLessThanRowKey=D20435: Lacking the value of key.

error.removingNoRowKey=D20422: This container has no row key.
error.removingRow=D20429: An unexpected error occurred while removing row.

error.searchingContainer=D20430: An unexpected error occurred while searching container.
error.searchingView=D20431: An unexpected error occurred while searching view.
error.missingArgument=D20405: The required argument is not set. The help command is used to display a description of the sub-command.

error.notificationInterfaceAddressInvalid=D20436: "{0}" is invalid IPv4 address format.

error.userOrRoleNotFound=D20437: The user name or role name "{0}" does not exists.
